{
  "pattern": "square",
  "pattern_no": "pattern_12",
  "type": "numeric pattern",
  "programing_language": "java",
  "code": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner createScanner = new Scanner(System.in);\n        int num;\n        int x;\n        System.out.print(\"Enter the number of rows and columns for the square: \");\n        num = createScanner.nextInt();\n\n        for (int i = 1; i <= num; i++) {\n            x = i;\n            for (int j = 1; j <= num; j++) {\n                System.out.print(x + \" \");\n                x += num;\n            }\n            System.out.print(\"\n\");\n        }\n    }\n}",
  "code_input_filter": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner createScanner = new Scanner(System.in);\n        int num = Integer.MIN_VALUE;\n        int x;\n        boolean checker;\n        String string;\n        System.out.print(\"Enter the number of rows and columns for the square: \");\n\n        checker = createScanner.hasNextInt();\n        string = createScanner.next();\n\n        if (checker) {\n            num = Integer.parseInt(string);\n        }\n\n        while (!checker || num <= 0) {\n            System.out.print(\n                    \"Must the number be positive, re-enter the number of rows and columns for the square: \");\n\n            checker = createScanner.hasNextInt();\n            string = createScanner.next();\n\n            if (checker) {\n                num = Integer.parseInt(string);\n            }\n        }\n\n        for (int i = 1; i <= num; i++) {\n            x = i;\n            for (int j = 1; j <= num; j++) {\n                System.out.print(x + \" \");\n                x += num;\n            }\n            System.out.print(\"\n\");\n        }\n    }\n}",
  "onlinegdb_id": "xbm4u6R56",
  "onlinegdb_id_input_filter": "v_uc87pHr",
  "example_output": " 1  6 11 16 21 \n 2  7 12 17 22 \n 3  8 13 18 23 \n 4  9 14 19 24 \n 5 10 15 20 25"
}
